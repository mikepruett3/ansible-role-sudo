---
# tasks file for ansible-role-sudo/

- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

- name: "Gather the package facts"
  ansible.builtin.package_facts:
    manager: auto
  when: ansible_facts.packages is not defined

- name: "Ensure use_pty is enabled in /etc/sudoers"
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    insertafter: ^[\s]*Defaults.*\benv_reset\b.*$
    line: Defaults        use_pty
    validate: /usr/sbin/visudo -cf %s

- name: "Enable logfile option with appropriate value in /etc/sudoers (Debian)"
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    insertafter: ^[\s]*Defaults.*\benv_reset\b.*$
    line: Defaults        logfile=/var/log/secure
    validate: /usr/sbin/visudo -cf %s
  when: ansible_os_family == 'Debian'

- name: "Create /etc/sudoers.d folder (if it not already exists!)"
  ansible.builtin.file:
    path: /etc/sudoers.d
    owner: root
    group: root
    state: directory
    mode: '0750'

- name: "Deploy sudoers file for aliases in /etc/sudoers.d"
  ansible.builtin.template:
    src: aliases.j2
    dest: "/etc/sudoers.d/aliases"
    owner: root
    group: root
    mode: '0440'
    validate: /usr/sbin/visudo -cf %s

- name: "Deploy sudoers file for superusers in /etc/sudoers.d"
  ansible.builtin.template:
    src: superusers.j2
    dest: "/etc/sudoers.d/superusers"
    owner: root
    group: root
    mode: '0440'
    validate: /usr/sbin/visudo -cf %s

- name: "Check for groups existence"
  shell: getent group {{ sudo_group }}
  register: group
  when: sudo_group is defined
  ignore_errors: true

- name: "Create sudoers file for sudo_group in /etc/sudoers.d"
  ansible.builtin.template:
    src: group.j2
    dest: '/etc/sudoers.d/{{ sudo_group | regex_replace("[^A-Za-z0-9]", "") }}'
    owner: root
    group: root
    mode: '0440'
    validate: /usr/sbin/visudo -cf %s
  when:
    - sudo_group is defined
    - group.rc == 0
